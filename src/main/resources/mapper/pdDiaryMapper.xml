<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="per.guzx.pri_diary.dao.PdDiaryDao">

    <sql id="select_diary">
        select user_id           userId,
               diary_id          diaryId,
               diary_title       diaryTitle,
               diary_weather     diaryWeather,
               diary_mood        diaryMood,
               diary_event       diaryEvent,
               diary_location    diaryLocation,
               diary_create_time diaryCreateTime,
               diary_update_time diaryUpdateTime,
               diary_content    diaryContent,
               diary_photo      diaryPhoto
    </sql>

    <sql id="select_diary_main">
        select user_id        userId,
               diary_id       diaryId,
               diary_title    diaryTitle,
               diary_weather  diaryWeather,
               diary_mood     diaryMood,
               diary_event    diaryEvent,
               diary_location diaryLocation,
               diary_content diaryContent,
               diary_photo   diaryPhoto
    </sql>

    <sql id="sql_where">
        <if test="diaryTitle != null and diaryTitle != ''">diary_title = #{diaryTitle},</if>
        <if test="diaryWeather != null">diary_weather = #{diaryWeather},</if>
        <if test="diaryMood != null">diary_mood = #{diaryMood},</if>
        <if test="diaryEvent != null">diary_event = #{diaryEvent},</if>
        <if test="diaryPhoto != null and diaryPhoto != ''">diary_photo = #{diaryPhoto},</if>
        <if test="diaryContent != null and diaryContent != ''">diary_content = #{diaryContent},</if>
        <if test="diaryLocation != null and diaryLocation != ''">diary_location = #{diaryLocation},</if>
        <if test="diaryUpdateTime != null and diaryUpdateTime != ''">diary_update_time = #{diaryUpdateTime},</if>
    </sql>
    
    <resultMap id="" type=""></resultMap>

    <insert id="insertDiary" useGeneratedKeys="true" keyProperty="diaryId">
        insert into pd_diary(user_id, diary_title, diary_weather, diary_mood, diary_event, diary_location,
                             diary_content, diary_photo, diary_create_time, diary_update_time, diary_longitude,
                             diary_latitude, diary_create_day)
            value
            (#{userId}, #{diaryTitle}, #{diaryWeather}, #{diaryMood}, #{diaryEvent}, #{diaryLocation},
             #{diaryContent}, #{diaryPhoto}, #{diaryCreateTime}, #{diaryUpdateTime}, #{diaryLongitude},
             #{diaryLatitude}, #{diaryCreateDay})
    </insert>

    <update id="updateDiary">
        update pd_diary
        <set>
            <include refid="sql_where"></include>
        </set>
        where
        user_id = #{userId} and diary_id = #{diaryId}
    </update>

    <delete id="deleteDiary" parameterType="int">
        delete
        from pd_diary
        where user_id = #{userId}
          and diary_id = #{diaryId}
    </delete>

    <select id="findDiaryById" resultType="diary">
        <include refid="select_diary"></include>
        from
        pd_diary
        where
        user_id = #{userId} and diary_id = #{diaryId}
    </select>

    <select id="findDiaryOtherById" resultType="diary">
        <include refid="select_diary_main"></include>
        from
        pd_diary
        where
        user_id = #{userId} and diary_id = #{diaryId}
    </select>

    <select id="findDiaryAll" resultType="diary">
        <include refid="select_diary"></include>
        from
        pd_diary
        where user_id = #{userId}
    </select>

    <select id="findDiaryByGlobal" resultType="diary">
        <include refid="select_diary"></include>
        from
        pd_diary
        <where>
            user_id = #{userId}
            <if test="global != null">
                and
                concat(diary_title,diary_weather,diary_mood,diary_event,diary_location,diary_create_time,diary_update_time,diary_content)
                like concat(concat('%',#{global}),'%')
            </if>
            order by diary_update_time
            limit #{start},#{size}
        </where>
    </select>

    <select id="findDiaryByUserId" parameterType="int" resultType="diary">
        <include refid="select_diary_main"></include>
        from
        pd_diary
        where
        user_id = #{userId}
    </select>

    <select id="getDiaryCountAndDiaryDay" resultType="java.util.HashMap">
        select count(DISTINCT diary_create_day) as recordDays,
               count(diary_id)                  as diaryTotal,
               sum(CHAR_LENGTH(diary_content))      as wordsTotal,
               count(diary_photo)              as photoTotal,
               count(diary_location)            as addressTotal
        from pd_diary
        where user_id = #{userId}
    </select>

    <select id="getWeekDiaryCount" resultType="int">
        select count(diary_id)
        from pd_diary
        where diary_create_time &gt;= #{beginDate}
          and diary_create_time &lt;= #{endDate}
          and user_id = #{userId}
    </select>

    <select id="getDiaryOther" resultType="java.util.Map">
        select diary_weather   as weather,
               diary_mood      as mood,
               diary_event     as event,
               diary_longitude as longitude,
               diary_latitude  as latitude,
               diary_photo    as photo,
               diary_id        as diaryId
        from pd_diary
        where user_id = #{userId}
    </select>

    <select id="getDiaryAndAddressCount" resultType="int">
        select count(diary_id)
        from pd_diary
        where diary_location != ''
          and user_id = #{userId}
    </select>

    <select id="getDiaryAddressInfo" resultType="java.util.Map">
        select diary_longitude as longitude,
               diary_latitude  as latitude,
               diary_id        as diaryId
        from pd_diary
        where diary_location != ''
          and user_id = #{userId}
    </select>

    <select id="getDiaryImgInfo" resultType="java.util.Map">
        select diary_id as diaryId, diary_photo as imgUrl
        from pd_diary
        where diary_photo != ''
          and user_id = #{userId}
    </select>

    <select id="getWeatherTimes" resultType="java.util.Map">
        select diary_weather as label,
               count(*)      as times
        from pd_diary
        where user_id = #{userId}
        GROUP BY diary_weather
        order by times
            desc
    </select>

    <select id="getMoodTimes" resultType="java.util.Map">
        select diary_mood as label,
               count(*)   as times
        from pd_diary
        where user_id = #{userId}
        GROUP BY diary_mood
        order by times desc
    </select>

    <select id="getEventTimes" resultType="java.util.Map">
        select diary_event as label,
               count(*)    as times
        from pd_diary
        where user_id = #{userId}
        GROUP BY diary_event
        order by times desc
    </select>
</mapper>