<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="per.guzx.priDiary.dao.PdFriendDao">
    <resultMap id="BaseResultMap" type="per.guzx.priDiary.pojo.PdFriend">
        <id column="friend_id" javaType="int" jdbcType="INTEGER" property="friendId"/>
        <result column="my_user_id" javaType="int" jdbcType="INTEGER" property="myUserId"/>
        <result column="my_email" javaType="string" jdbcType="VARCHAR" property="myEmail"/>
        <result column="my_phone" javaType="string" jdbcType="VARCHAR" property="myPhone"/>
        <result column="friend_user_id" javaType="int" jdbcType="INTEGER" property="friendUserId"/>
        <result column="friend_email" javaType="string" jdbcType="VARCHAR" property="friendEmail"/>
        <result column="friend_phone" javaType="string" jdbcType="VARCHAR" property="friendPhone"/>
        <result column="friend_remark" javaType="string" jdbcType="VARCHAR" property="friendRemark"/>
    </resultMap>

    <sql id="sql_where">
        <if test="myUserId !=null and myUserId !='' ">
            my_user_id = #{myUserId},
        </if>
        <if test="myEmail !=null and myEmail !='' ">
            my_email = #{myEmail},
        </if>
        <if test="myPhone !=null and myPhone !=''">
            my_phone = #{myPhone},
        </if>
        <if test="friendUserId !=null and friendUserId !='' ">
            friend_user_id = #{friendUserId},
        </if>
        <if test="friendEmail !=null and friendEmail !='' ">
            friend_email = #{friendEmail},
        </if>
        <if test="friendPhone !=null and friendPhone !='' ">
            friend_phone = #{friendPhone},
        </if>
        <if test="friendRemark !=null and friendRemark !='' ">
            friend_remark = #{friendRemark},
        </if>
        <if test="friendApplyResult != null and friendApplyResult !=''">
            friend_apply_result = #{friendApplyResult}
        </if>
    </sql>

    <sql id="select_friend">
        select private_diary.pd_friend.friend_id,
               private_diary.pd_friend.my_user_id,
               private_diary.pd_friend.my_email,
               private_diary.pd_friend.my_phone,
               private_diary.pd_friend.friend_user_id,
               private_diary.pd_friend.friend_email,
               private_diary.pd_friend.friend_phone,
               private_diary.pd_friend.friend_remark,
               private_diary.pd_friend.friend_apply_result
    </sql>

    <insert id="save" useGeneratedKeys="true" keyProperty="friendId">
        insert into private_diary.pd_friend(my_user_id, my_email, my_phone, friend_user_id, friend_email, friend_phone,
                                            friend_remark, friend_apply_result)
                value (#{myUserId}, #{myEmail}, #{myPhone}, #{friendUserId}, #{friendEmail}, #{friendPhone},
                       #{friendRemark}, #{friendApplyResult})
    </insert>

    <delete id="deleteById" parameterType="int">
        delete
        from private_diary.pd_friend
        where friend_user_id = #{friendUserId}
    </delete>

    <update id="update">
        update private_diary.pd_friend
        <set>
            <include refid="sql_where">
            </include>
        </set>
        where friend_user_id = #{friendUserId}
    </update>

    <select id="findById" resultType="friend">
        <include refid="select_friend">
        </include>
        from
        private_diary.pd_friend
        where
        my_user_id = #{myUserId}
        and
        friend_user_id = #{friendUserId}
    </select>

    <select id="findFriendByInfo" resultType="friend">
        <include refid="select_friend">
        </include>
        from
        private_diary.pd_friend
        <where>
            my_user_id = #{myUserId}
            <if test="global != null">
                and
                concat(friend_user_id,friend_email,friend_phone,friend_remark)
                like concat(concat('%',#{global}),'%')
            </if>
            limit #{start},#{size}
        </where>
    </select>
</mapper>